//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoLibrary.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TempPalletTrackingDB_2Entities : DbContext
    {
        public TempPalletTrackingDB_2Entities()
            : base("name=TempPalletTrackingDB_2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<aqtraydata> aqtraydatas { get; set; }
        public virtual DbSet<defect> defects { get; set; }
        public virtual DbSet<hgadefect> hgadefects { get; set; }
        public virtual DbSet<hgainfo> hgainfoes { get; set; }
        public virtual DbSet<tray> trays { get; set; }
        public virtual DbSet<view> views { get; set; }
        public virtual DbSet<hgainfoView> hgainfoViews { get; set; }
        public virtual DbSet<pallet> pallets { get; set; }
    
        public virtual ObjectResult<spSearchPalletId_Result> spSearchPalletId(string palletIdParam)
        {
            var palletIdParamParameter = palletIdParam != null ?
                new ObjectParameter("palletIdParam", palletIdParam) :
                new ObjectParameter("palletIdParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchPalletId_Result>("spSearchPalletId", palletIdParamParameter);
        }
    
        public virtual ObjectResult<spLoadDefectHGA_Result> spLoadDefectHGA(Nullable<int> hgaIdParam)
        {
            var hgaIdParamParameter = hgaIdParam.HasValue ?
                new ObjectParameter("hgaIdParam", hgaIdParam) :
                new ObjectParameter("hgaIdParam", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLoadDefectHGA_Result>("spLoadDefectHGA", hgaIdParamParameter);
        }
    
        public virtual ObjectResult<spGetDefectsOnTray_Result> spGetDefectsOnTray(string trayIdParam)
        {
            var trayIdParamParameter = trayIdParam != null ?
                new ObjectParameter("trayIdParam", trayIdParam) :
                new ObjectParameter("trayIdParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDefectsOnTray_Result>("spGetDefectsOnTray", trayIdParamParameter);
        }
    
        public virtual ObjectResult<spSearchTrayId_Result> spSearchTrayId(string trayIdParam)
        {
            var trayIdParamParameter = trayIdParam != null ?
                new ObjectParameter("trayIdParam", trayIdParam) :
                new ObjectParameter("trayIdParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchTrayId_Result>("spSearchTrayId", trayIdParamParameter);
        }
    }
}
